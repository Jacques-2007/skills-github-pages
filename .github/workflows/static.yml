import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { useState, useEffect } from 'react';
import { Home } from './pages/Home';
import { Shop } from './pages/Shop';
import { Product } from './pages/Product';
import { Cart } from './pages/Cart';
import { Login } from './pages/Login';
import { Register } from './pages/Register';
import { Checkout } from './pages/Checkout';
import { Profile } from './pages/Profile';
import { Navbar } from './components/Navbar';

export default function App() {
  const [darkMode, setDarkMode] = useState(false);

  useEffect(() => {
    document.documentElement.classList.toggle('dark', darkMode);
  }, [darkMode]);

  return (
    <Router>
      <div className="min-h-screen bg-pink-100 dark:bg-gray-900 dark:text-white bg-[url('https://via.placeholder.com/1000x600?text=Pastries')] bg-no-repeat bg-center bg-fixed bg-opacity-5">
        <Navbar darkMode={darkMode} setDarkMode={setDarkMode} />
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/shop" element={<Shop />} />
          <Route path="/product/:id" element={<Product />} />
          <Route path="/cart" element={<Cart />} />
          <Route path="/login" element={<Login />} />
          <Route path="/register" element={<Register />} />
          <Route path="/checkout" element={<Checkout />} />
          <Route path="/profile" element={<Profile />} />
        </Routes>
      </div>
    </Router>
  );
}

// Components/Navbar.jsx
export function Navbar({ darkMode, setDarkMode }) {
  return (
    <nav className="bg-white dark:bg-gray-800 sticky top-0 z-50 shadow p-4 flex justify-between items-center">
      <a href="/" className="text-xl font-bold">Bouche Finne Bakery</a>
      <div className="space-x-4 flex items-center">
        <a href="/shop" className="hover:underline">Shop</a>
        <a href="/cart" className="hover:underline">Cart</a>
        <a href="/login" className="hover:underline">Login</a>
        <button 
          onClick={() => setDarkMode(!darkMode)} 
          className="ml-4 px-2 py-1 bg-gray-200 dark:bg-gray-700 rounded">
          {darkMode ? 'Light Mode' : 'Dark Mode'}
        </button>
      </div>
    </nav>
  );
}

// Pages
export function Home() {
  return (
    <div className="p-6 text-center">
      <p>Welcome to Bouche Finne Bakery! Discover delicious Haitian pastries and cakes.</p>
      <p className="mt-4">
        <strong>Contact:</strong><br/>
        Chef: +1(516)729-4120<br/>
        Store Manager: +1(516)434-9288<br/>
        Secretary: +1(516)709-2193<br/>
        Email: jamesjeanpaul@gmail.com<br/>
        Email: jacqrith83@gmail.com
      </p>
    </div>
  );
}

export function Shop() {
  const products = [
    {
      id: 1,
      name: 'Haitian Patties (Beef - Mild)',
      image: 'https://via.placeholder.com/150',
      price: '1 dozen - $35 | 6 pieces - $20'
    },
    {
      id: 2,
      name: 'Upside Down Pineapple Cake',
      image: 'https://via.placeholder.com/150',
      price: 'Small: $65-$75 | Medium: $85-$100 | Large: $100-$200'
    },
    {
      id: 3,
      name: 'Tresse Royale',
      image: 'https://via.placeholder.com/150',
      price: '$80'
    },
    {
      id: 4,
      name: "Tarte Ã  l'oignon",
      image: 'https://via.placeholder.com/150',
      price: '$75'
    },
  ];
  return (
    <div className="p-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {products.map(p => (
        <a href={`/product/${p.id}`} key={p.id} className="p-4 border rounded shadow hover:shadow-lg transition bg-white/70 dark:bg-gray-700">
          <img src={p.image} alt={p.name} className="w-full h-40 object-cover mb-2 rounded" />
          <h2 className="text-lg font-semibold">{p.name}</h2>
          <p>{p.price}</p>
        </a>
      ))}
    </div>
  );
}

export function Product() {
  return (
    <div className="p-6">
      <img src="https://via.placeholder.com/400x300" alt="Product" className="rounded mb-4" />
      <h2 className="text-2xl font-bold">Product Name</h2>
      <p className="mt-2">Product description goes here.</p>
      <button className="mt-4 bg-blue-500 text-white px-4 py-2 rounded">Add to Cart</button>
    </div>
  );
}

export function Cart() {
  return (
    <div className="p-6">
      <h2 className="text-2xl font-bold">Your Cart</h2>
      <p>No items yet.</p>
    </div>
  );
}

export function Login() {
  return (
    <div className="p-6 max-w-md mx-auto bg-white dark:bg-gray-800 shadow rounded">
      <h2 className="text-xl font-bold mb-4">Login</h2>
      <input className="w-full border p-2 mb-4 rounded" placeholder="Email" />
      <input className="w-full border p-2 mb-4 rounded" type="password" placeholder="Password" />
      <button className="w-full bg-blue-600 hover:bg-blue-700 text-white p-2 rounded">Login</button>
    </div>
  );
}

export function Register() {
  return (
    <div className="p-6 max-w-md mx-auto bg-white dark:bg-gray-800 shadow rounded">
      <h2 className="text-xl font-bold mb-4">Register</h2>
      <input className="w-full border p-2 mb-4 rounded" placeholder="Name" />
      <input className="w-full border p-2 mb-4 rounded" placeholder="Email" />
      <input className="w-full border p-2 mb-4 rounded" type="password" placeholder="Password" />
      <button className="w-full bg-green-600 hover:bg-green-700 text-white p-2 rounded">Register</button>
    </div>
  );
}

export function Checkout() {
  return (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4">Checkout</h2>
      <p>Order summary and payment form goes here.</p>
    </div>
  );
}

export function Profile() {
  return (
    <div className="p-6">
      <h2 className="text-2xl font-bold">Your Profile</h2>
      <p>View order history and account info.</p>
    </div>
  );
}
# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
